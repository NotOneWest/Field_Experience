/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/music_screen/MusicViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MusicViewBase::MusicViewBase() :
    sliderValueConfirmedCallback(this, &MusicViewBase::sliderValueConfirmedCallbackHandler),
    buttonCallback(this, &MusicViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_480X272_STONE_ID));
    background.setPosition(0, 0, 480, 272);
    background.setOffset(0, 0);
    add(background);

    iconBox.setXY(190, 15);
    iconBox.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_SMALL_FILL_ACTION_ID));
    add(iconBox);

    icon.setXY(203, 28);
    icon.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_MUSIC_NOTE_75_75_000000_SVG_ID));
    add(icon);

    playBar.setXY(40, 160);
    playBar.setProgressIndicatorPosition(0, 0, 400, 10);
    playBar.setRange(0, 32767);
    playBar.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    playBar.setBackground(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BOXPROGRESS_NORMAL_LARGE_ID));
    playBar.setColor(touchgfx::Color::getColorFromRGB(230, 0, 126));
    playBar.setValue(0);
    add(playBar);

    btnStopPlay.setXY(215, 180);
    btnStopPlay.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAY_CIRCLE_FILLED_50_50_E6007E_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PAUSE_CIRCLE_FILLED_50_50_E6007E_SVG_ID));
    btnStopPlay.setAction(buttonCallback);
    add(btnStopPlay);

    btnNext.setXY(265, 180);
    btnNext.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_C0C9D2_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_E6007E_SVG_ID));
    btnNext.setAction(buttonCallback);
    add(btnNext);

    btnPrev.setXY(165, 180);
    btnPrev.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_PREVIOUS_50_50_C0C9D2_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_PREVIOUS_50_50_E6007E_SVG_ID));
    btnPrev.setAction(buttonCallback);
    add(btnPrev);

    title.setPosition(40, 122, 400, 25);
    title.setColor(touchgfx::Color::getColorFromRGB(192, 201, 210));
    title.setLinespacing(0);
    Unicode::snprintf(titleBuffer, TITLE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NURG).getText());
    title.setWildcard(titleBuffer);
    title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YJMK));
    add(title);

    playtime.setXY(416, 147);
    playtime.setColor(touchgfx::Color::getColorFromRGB(192, 201, 210));
    playtime.setLinespacing(0);
    touchgfx::Unicode::snprintf(playtimeBuffer1, PLAYTIMEBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6CV5).getText());
    playtime.setWildcard1(playtimeBuffer1);
    touchgfx::Unicode::snprintf(playtimeBuffer2, PLAYTIMEBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AAKN).getText());
    playtime.setWildcard2(playtimeBuffer2);
    playtime.resizeToCurrentText();
    playtime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JBLA));
    add(playtime);

    verticalSlider.setXY(440, 31);
    verticalSlider.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDER_BACKGROUND_VERTICAL_ID), touchgfx::Bitmap(BITMAP_SLIDER_BACKGROUND_VERTICAL_FILLED_ID), touchgfx::Bitmap(BITMAP_SLIDER_KNOB_SHAPE_ID));
    verticalSlider.setupVerticalSlider(15, 22, 0, 0, 176);
    verticalSlider.setValueRange(0, 100);
    verticalSlider.setValue(20);
    verticalSlider.setStopValueCallback(sliderValueConfirmedCallback);
    add(verticalSlider);

    Home.setXY(225, 242);
    Home.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_30_30_3297C8_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_30_30_E6007E_SVG_ID));
    Home.setAction(buttonCallback);
    add(Home);

    btnList.setXY(0, 0);
    btnList.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAYLIST_PLAY_30_30_3297C8_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAYLIST_ADD_CHECK_30_30_E6007E_SVG_ID));
    btnList.setAction(buttonCallback);
    add(btnList);
}

MusicViewBase::~MusicViewBase()
{

}

void MusicViewBase::setupScreen()
{

}

void MusicViewBase::sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &verticalSlider)
    {
        //verticalSliderMove
        //When verticalSlider value confirmed execute C++ code
        //Execute C++ code
        if(audioPlay == -1) volume = value;
        else BSP_AUDIO_OUT_SetVolume(value);
    }
}

void MusicViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnNext)
    {
        //btnNextClicked
        //When btnNext clicked call virtual function
        //Call btnNextClicked
        btnNextClicked();
    }
    if (&src == &btnPrev)
    {
        //btnPrevClicked
        //When btnPrev clicked call virtual function
        //Call btnPrevClicked
        btnPrevClicked();
    }
    if (&src == &btnStopPlay)
    {
        //playMusic
        //When btnStopPlay clicked call virtual function
        //Call playMusic
        playMusic();
    }
    if (&src == &btnList)
    {
        //initInfo
        //When btnList clicked execute C++ code
        //Execute C++ code
        if(pos) BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
        backState=pos=playTime=audioPlay=play=0;
        volume=20;
        playBar.setValue(0);
        
        f_close(&SDFile);
        res = f_mount(0, "", 0);
    
        //moveList
        //When initInfo completed change screen to MusicList
        //Go to MusicList with screen transition towards East
        application().gotoMusicListScreenSlideTransitionEast();
    }
    if (&src == &Home)
    {
        //closeFile
        //When Home clicked execute C++ code
        //Execute C++ code
        f_close(&SDFile);
        res = f_mount(0, "", 0);
        backState=pos=playTime=audioPlay=play=0;
        volume=20;
        BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
        playBar.setValue(0);
    
        //Interaction2
        //When closeFile completed change screen to Main
        //Go to Main with screen transition towards East
        application().gotoMainScreenSlideTransitionEast();
    }
}

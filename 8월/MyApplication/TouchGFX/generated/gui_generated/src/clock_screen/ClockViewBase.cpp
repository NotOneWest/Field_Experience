/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/clock_screen/ClockViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ClockViewBase::ClockViewBase() :
    buttonCallback(this, &ClockViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_480X272_STONE_ID));
    background.setPosition(0, 0, 480, 272);
    background.setOffset(0, 0);
    add(background);

    Home.setXY(225, 242);
    Home.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_30_30_3297C8_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_30_30_000000_SVG_ID));
    Home.setAction(buttonCallback);
    add(Home);

    hour.setXY(45, 100);
    hour.setColor(touchgfx::Color::getColorFromRGB(50, 151, 200));
    hour.setLinespacing(0);
    hour.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8S5A));
    add(hour);

    hourNum.setXY(54, 132);
    hourNum.setColor(touchgfx::Color::getColorFromRGB(50, 151, 200));
    hourNum.setLinespacing(0);
    Unicode::snprintf(hourNumBuffer, HOURNUM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KE5W).getText());
    hourNum.setWildcard(hourNumBuffer);
    hourNum.resizeToCurrentText();
    hourNum.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B45A));
    add(hourNum);

    min.setXY(153, 99);
    min.setColor(touchgfx::Color::getColorFromRGB(50, 151, 200));
    min.setLinespacing(0);
    min.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OOY2));
    add(min);

    minNum.setXY(175, 131);
    minNum.setColor(touchgfx::Color::getColorFromRGB(50, 151, 200));
    minNum.setLinespacing(0);
    Unicode::snprintf(minNumBuffer, MINNUM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8NN).getText());
    minNum.setWildcard(minNumBuffer);
    minNum.resizeToCurrentText();
    minNum.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8UW3));
    add(minNum);

    sec.setXY(291, 100);
    sec.setColor(touchgfx::Color::getColorFromRGB(50, 151, 200));
    sec.setLinespacing(0);
    sec.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UTFW));
    add(sec);

    secNum.setXY(316, 132);
    secNum.setColor(touchgfx::Color::getColorFromRGB(50, 151, 200));
    secNum.setLinespacing(0);
    Unicode::snprintf(secNumBuffer, SECNUM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_L5F5).getText());
    secNum.setWildcard(secNumBuffer);
    secNum.resizeToCurrentText();
    secNum.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J8M4));
    add(secNum);

    btnHourDown.setXY(103, 140);
    btnHourDown.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_C0C9D2_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E6007E_SVG_ID));
    btnHourDown.setAction(buttonCallback);
    add(btnHourDown);

    btnHourUp.setXY(103, 90);
    btnHourUp.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_ACB5BC_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E6007E_SVG_ID));
    btnHourUp.setAction(buttonCallback);
    add(btnHourUp);

    btnMinDown.setXY(241, 140);
    btnMinDown.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_C0C9D2_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E6007E_SVG_ID));
    btnMinDown.setAction(buttonCallback);
    add(btnMinDown);

    btnMinUp.setXY(241, 90);
    btnMinUp.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_ACB5BC_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E6007E_SVG_ID));
    btnMinUp.setAction(buttonCallback);
    add(btnMinUp);

    btnSecDown.setXY(386, 140);
    btnSecDown.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_C0C9D2_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E6007E_SVG_ID));
    btnSecDown.setAction(buttonCallback);
    add(btnSecDown);

    btnSecUp.setXY(386, 90);
    btnSecUp.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_ACB5BC_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E6007E_SVG_ID));
    btnSecUp.setAction(buttonCallback);
    add(btnSecUp);

    btnSaveTime.setXY(264, 0);
    btnSaveTime.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID));
    btnSaveTime.setLabelText(touchgfx::TypedText(T___SINGLEUSE_IE0W));
    btnSaveTime.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnSaveTime.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnSaveTime.setAction(buttonCallback);
    add(btnSaveTime);

    digitalClock.setPosition(68, 24, 196, 33);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(50, 151, 200));
    digitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QMJE));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_12_HOUR);
    digitalClock.setTime12Hour(10, 10, 0, true);
    add(digitalClock);
}

ClockViewBase::~ClockViewBase()
{

}

void ClockViewBase::setupScreen()
{

}

void ClockViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Home)
    {
        //Home
        //When Home clicked change screen to Main
        //Go to Main with screen transition towards East
        application().gotoMainScreenSlideTransitionEast();
    }
    if (&src == &btnHourUp)
    {
        //HourUp
        //When btnHourUp clicked call virtual function
        //Call btnHourUpClicked
        btnHourUpClicked();
    }
    if (&src == &btnHourDown)
    {
        //HourDown
        //When btnHourDown clicked call virtual function
        //Call btnHourDownClicked
        btnHourDownClicked();
    }
    if (&src == &btnMinUp)
    {
        //MinUp
        //When btnMinUp clicked call virtual function
        //Call btnMinUpClicked
        btnMinUpClicked();
    }
    if (&src == &btnMinDown)
    {
        //MinDown
        //When btnMinDown clicked call virtual function
        //Call btnMinDownClicked
        btnMinDownClicked();
    }
    if (&src == &btnSecUp)
    {
        //SecUp
        //When btnSecUp clicked call virtual function
        //Call btnSecUpClicked
        btnSecUpClicked();
    }
    if (&src == &btnSecDown)
    {
        //SecDown
        //When btnSecDown clicked call virtual function
        //Call btnSecDownClicked
        btnSecDownClicked();
    }
    if (&src == &btnSaveTime)
    {
        //SaveTime
        //When btnSaveTime clicked call virtual function
        //Call btnSaveTimeClicked
        btnSaveTimeClicked();
    }
}

/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CLOCKVIEWBASE_HPP
#define CLOCKVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/clock_screen/ClockPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>

class ClockViewBase : public touchgfx::View<ClockPresenter>
{
public:
    ClockViewBase();
    virtual ~ClockViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void btnHourUpClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void btnHourDownClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void btnMinUpClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void btnMinDownClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void btnSecUpClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void btnSecDownClicked()
    {
        // Override and implement this function in Clock
    }
    virtual void btnSaveTimeClicked()
    {
        // Override and implement this function in Clock
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage background;
    touchgfx::Button Home;
    touchgfx::TextArea hour;
    touchgfx::TextAreaWithOneWildcard hourNum;
    touchgfx::TextArea min;
    touchgfx::TextAreaWithOneWildcard minNum;
    touchgfx::TextArea sec;
    touchgfx::TextAreaWithOneWildcard secNum;
    touchgfx::Button btnHourDown;
    touchgfx::Button btnHourUp;
    touchgfx::Button btnMinDown;
    touchgfx::Button btnMinUp;
    touchgfx::Button btnSecDown;
    touchgfx::Button btnSecUp;
    touchgfx::ButtonWithLabel btnSaveTime;
    touchgfx::DigitalClock digitalClock;

    /*
     * Wildcard Buffers
     */
    static const uint16_t HOURNUM_SIZE = 3;
    touchgfx::Unicode::UnicodeChar hourNumBuffer[HOURNUM_SIZE];
    static const uint16_t MINNUM_SIZE = 3;
    touchgfx::Unicode::UnicodeChar minNumBuffer[MINNUM_SIZE];
    static const uint16_t SECNUM_SIZE = 3;
    touchgfx::Unicode::UnicodeChar secNumBuffer[SECNUM_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ClockViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CLOCKVIEWBASE_HPP
